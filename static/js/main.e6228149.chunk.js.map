{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilm","url","fetch","options","then","response","ok","Error","status","statusText","json","apiMovie","Response","Title","Plot","Poster","imdbID","FindMovie","onAdd","useState","setMovie","setTitle","isFilmNotFound","setIsFilmNotFound","couldPreview","setcouldPreview","couldAdd","setCouldAdd","htmlFor","type","id","placeholder","value","onChange","e","target","toLowerCase","onClick","findFilm","catch","App","state","data","addMovie","some","el","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6228149.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?t=';\n// const DATA_URL = '/?apikey=1aae898a&';\nconst apikey = '&apikey=1aae898a';\n\nconst request = (url, options) => fetch(`${BASE_URL}${url}${apikey}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json().then((apiMovie) => {\n      if (apiMovie.Response === 'False') {\n        throw new Error(apiMovie.Error);\n      }\n\n      return {\n        title: apiMovie.Title,\n        description: apiMovie.Plot,\n        imgUrl: apiMovie.Poster,\n        imdbUrl: apiMovie.imdbID,\n        imdbId: apiMovie.imdbID,\n      };\n    });\n  });\n\nexport const getFilm = title => request(title);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/api';\n\nexport const FindMovie = ({ onAdd }) => {\n  const [movie, setMovie] = useState({});\n  const [title, setTitle] = useState('');\n  const [isFilmNotFound, setIsFilmNotFound] = useState(false);\n  const [couldPreview, setcouldPreview] = useState(false);\n  const [couldAdd, setCouldAdd] = useState(false);\n\n  const handleChange = (e) => {\n    setTitle(e.target.value.toLowerCase());\n  };\n\n  const handleSearch = () => {\n    getFilm(title).then((findFilm) => {\n      setMovie(findFilm);\n      setIsFilmNotFound(false);\n      setcouldPreview(true);\n    })\n      .catch((e) => {\n        setIsFilmNotFound(true);\n        setcouldPreview(false);\n      });\n  };\n\n  const handleAdd = () => {\n    if (couldPreview) {\n      onAdd(movie);\n      setMovie({});\n      setIsFilmNotFound(false);\n      setcouldPreview(false);\n      setTitle('');\n    } else {\n      setCouldAdd(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {isFilmNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n          {couldAdd && (\n            <p className=\"help is-danger\">\n              Can&apos;t add a movie\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAdd}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {couldPreview && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (this.state.movies.some(el => el.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}